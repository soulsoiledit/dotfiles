(defwindow bar
  :monitor 0
  :exclusive true
  :geometry
  (geometry
    :width "2%"
    :height "100%"
    :anchor "left center")
  (centerbox
    :orientation "vertical"
    :halign "center"

    (box
      :space-evenly false
      :orientation "v"

      ;; launcher / power
      (niri))

    (clock)

    (box
      :orientation "vertical"
      :space-evenly false
      :valign "end"
      :spacing 12

      (eventbox
        :class "layer hover"
        (box
          :halign "center"
          :orientation "vertical"
          :space-evenly false
          (volume)
          (network)
          (battery)
          ;; (weather)
        ))

      (tray)
      (hidden)

      ;; settings
      ;; power
    )))

(defwindow logout
  :monitor 0
  :stacking "overlay"
  :geometry
  (geometry
    :width "25%"
    :height "25%"
    :anchor "center")
  (battery))

;; current used device (wireless, wired, speaker, onboard)
;; popup
;; currently playing audio with media control
;; input streams
;; microphone toggle
(defvar volume_step 5)
(deflisten volume "scripts/volume.sh")
(defwidget volume [ ]
  (eventbox
    :onscroll "if [[ {} == up ]]; then
        wpctl set-volume @DEFAULT_AUDIO_SINK@ ${volume_step}%+ -l 1.0;
      else
        wpctl set-volume @DEFAULT_AUDIO_SINK@ ${volume_step}%- -l 1.0;
      fi"
    :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle" ;
    :halign "center"
    :class "volume ${volume?.mute ?: false ? "volume-muted" : "volume-unmuted"}"
    :tooltip "${volume?.volume ?: "?"}%"
    "${volume?.symbol ?: ""}"))

;; power profiles
;; cpu usage
;; memory usage
(deflisten battery "scripts/battery.sh")
(defwidget battery [ ]
  (eventbox
    :class "battery"
    :halign "center"
    :tooltip "${battery?.percentage}% ${battery?.remaining} left @ ${round((battery?.wattage ?: 0) / 1000000,1)}W"
    "${battery?.symbol ?: false}"))

;; vpn status
(deflisten network "scripts/network.sh")
(defwidget network [ ]
  (eventbox
    :class "network ${network?.status}"
    :tooltip { network?.ssid }
    :halign "center"
    { network?.symbol ?: "" }))

;; (defwidget launcher
;; idk
;; )

;; (defwidget logout
;; idk
;; )

(deflisten niri "scripts/niri.sh")

;; workspaces
;; currently active
;; has window open
;; empty
;; only display >5 as needed
(defwidget niri [ ]
  (box
    :orientation "v"
    :halign "center"
    :space-evenly false
    :class "workspaces"
    (for i in { [1,2,3,4,5,6,7,8,9,10] }
      (button
        :onclick "niri msg action focus-workspace ${i}"
        :visible {
          (niri?.[i - 1]?.is_focused ?: false) != false||(niri?.[i - 1]?.active_window_id ?: false) != false||(niri?.[i - 1]?.name ?: false) != false
        }
        :class {
          (niri?.[i - 1]?.is_focused ?: false)
          ? "active"
          : ((niri?.[i - 1]?.active_window_id ?: false) != false
          ? "used"
          : "")
        }))))

;; (defwidget windows []
;; active on current workspace
;; )

(defwidget clock [ ]
  ;; add popup with different timezones configured
  ;; add calendar popup
  (eventbox
    :class "layer hover"
    :tooltip { formattime(EWW_TIME,"%c") }
    (box
      :class "clock"
      :orientation "v"
      :space-evenly false
      (label
        :justify "center"
        :text { formattime(EWW_TIME,"%-m%n%-d") })
      (label
        :class "grayed"
        :text "-")
      (label
        :justify "center"
        :text { formattime(EWW_TIME,"%-H%n%M") }))))

(defwidget tray [ ]
  (eventbox
    :class "layer hover"
    (systray
      :orientation "v"
      :halign "center"
      :class "systray"
      :icon-size 18)))

;; hidden
(deflisten brightness "scripts/brightness.sh")
(deflisten profile "scripts/profile.sh")
(defwidget hidden [ ]
  (button
    :visible false
    "${brightness.symbol} ${profile}"))

;; (defwidget system [ ]
;;   (button
;;     :onmiddleclick "foot -e btop &"
;;     (box
;;       :space-evenly false
;;       :class "button"
;;
;;       ;; (memory)
;;       ;; (temperature)
;;       ;; (cpu)
;;     )))
;;
;; (defpoll memory
;;   :initial "{}"
;;   :interval "10s"
;;   "scripts/memory.sh")
;; (defwidget memory [ ]
;;   (box
;;     :space-evenly false
;;     :class "memory""󰍛 "
;;     (label
;;       :class "small_text"
;;       :text "${round(memory.used_percentage ?: 0,0)}% ")))
;;
;; (defpoll temperature
;;   :initial ""
;;   :interval "1m"
;;   "scripts/temperature.sh")
;; (defwidget temperature [ ]
;;   (box
;;     :space-evenly false
;;     :class "temperature""󰔏 "
;;     (label
;;       :class "small_text"
;;       :text "${temperature}° ")))
;;
;; (defpoll cpu
;;   :initial "{}"
;;   :interval "1m"
;;   "scripts/cpu.sh")
;; (defwidget cpu [ ]
;;   (box
;;     :space-evenly false
;;     :class "cpu""󰘚 "
;;     (label
;;       :class "small_text"
;;       :text "${round(100 - (cpu.cpu_percentage ?: 99),0)}% ")))
;;
;; ;; TODO: add actual power menu....
;; ;;
;; (defwidget power_menu [ ]
;;   (button
;;     :onclick "fuzzel &"
;;     :class "button power"
;;     "󰐥"))
;;
;; (defwidget launcher [ ]
;;   (button
;;     :onclick "fuzzel &"
;;     :class "button launcher"
;;     ""))
;;
;; (defwidget user [ ]
;;   (box
;;     :space-evenly false
;;     :class "button"
;;   ))
;;
;; (defwidget brightness []
;;   (eventbox
;;     :class "brightness"
;;     :onscroll "if [[ {} == up ]];
;;       then brightnessctl set 20%+;
;;       else brightnessctl set 20%-;
;;       fi;
;;       "
;;     "${brightness.symbol} "))
;;
;; (defpoll weather
;;   :initial "{}"
;;   :interval "1h"
;;   "scripts/weather.sh")
;; (defwidget weather [ ]
;;   (button
;;     :class "weather"
;;     :tooltip { weather.tooltip }
;;     :onmiddleclick "xdg-open 'https://weather.com/weather/today/' &"
;;     "${weather.symbol ?: "󰼯"} "))
;;
;; (deflisten mpris-status
;;   :initial "{}"
;;   "scripts/mpris.sh status")
;; (deflisten mpris-metadata
;;   :initial "{}"
;;   "scripts/mpris.sh metadata")
;; (defwidget mpris [ ]
;;   (tooltip
;;     :class "button""${mpris-metadata.title}\\n${mpris-metadata.artist} - ${mpris-metadata.album}"
;;     (box
;;       :space-evenly false
;;       :class "mpris"
;;       (button
;;         :onclick "playerctl previous"
;;         "󰙣")
;;       (button
;;         :onclick "playerctl play-pause"
;;         {
;;           mpris-status.symbol ?: "󰐌"
;;         })
;;       (button
;;         :onclick "playerctl next"
;;         "󰙡"))))
